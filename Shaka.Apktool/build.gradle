apply plugin: 'fatjar'

import org.apache.tools.ant.filters.*

buildscript {
    repositories {
        maven {
            url "http://www.eveoh.nl/files/maven2"
        }
    }
    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.2"
    }
}
ext.aspectjVersion = '1.7.4'
apply plugin: 'aspectj'

version = apktoolversion
shakaDebug = 'true'

configurations {
    proguard
}

task release {
    shakaDebug = 'false'
}

processResources {
    from('src/main/resources/properties') {
        include '**/*.properties'
        into 'properties'
        filter(ReplaceTokens, tokens: [version: apktoolversion, shakaDebug: shakaDebug] )
    }
    from('src/main/resources/') {
        include '**/*.jar'
    }

    includeEmptyDirs = false
}

dependencies {
    compile 'org.aspectj:aspectjrt:1.7.4'
    compile project(':brut.apktool:apktool-cli')
    compile project(':brut.apktool:apktool-lib')
    ajInpath project(':brut.apktool:apktool-lib')
    ajInpath project(':brut.apktool:apktool-cli')
    compile project(':brut.j.dir')
    testCompile 'junit:junit:4.11'
//    proguard 'net.sf.proguard:proguard-base:4.8'
    proguard files('../libs/proguard.jar')
}

gradle.taskGraph.whenReady {
    fatJar {
        manifest {
            attributes("Main-Class": "brut.apktool.Main")
        }
    }
}

task proguard(type: JavaExec, dependsOn: fatJar) {
    def outFile = jar.destinationDir.getPath() + '/' + jar.baseName + '-' + jar.version + '-release' + '.' + jar.extension
    inputs.file jar.archivePath
    outputs.file outFile

    classpath = configurations.proguard
    main = 'proguard.ProGuard'
    args '-injars ' + "${jar.archivePath}" + ' (!META-INF/LICENSE.txt,!META-INF/NOTICE.txt,!README)'
    args "-outjars ${outFile}"
    args "-libraryjars ${System.properties['java.home']}/lib/rt.jar"
//    args '-dontobfuscate'
//    args "-obfuscationdictionary ${keywordsFile}"
//    args "-classobfuscationdictionary ${keywordsFile}"
//    args "-packageobfuscationdictionary ${keywordsFile}"
    args '-dontoptimize'
    args '-dontnote **'
    args '-ignorewarnings'
    args '-dontwarn com.google.common.base.**'
    args '-dontwarn com.google.common.collect.**'
    args '-dontwarn com.google.common.util.**'
    args '-dontwarn javax.xml.xpath.**'
    args '-dontwarn com.rover12421.shaka.apktool.AspjectJ.**'
    args '-keep public class brut.apktool.Main { public static void main(java.lang.String[]); }'
    args '-keep class org.yaml.snakeyaml.** { public protected private *; }'
    args '-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }'
    args '-keep class brut.androlib.res.decoder.StringBlock { private *; }'
}

tasks.getByPath(':release').dependsOn(proguard)
