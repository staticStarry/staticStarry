apply plugin: 'fatjar'

import org.apache.tools.ant.filters.*

buildscript {
    repositories {
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }
    dependencies {
        classpath "nl.eveoh:gradle-aspectj:1.4"
    }
}
ext.aspectjVersion = '1.8.1'
apply plugin: 'aspectj'

shakaVersion_major = '1.0'
shakaVersion_minor = project.apktool_version
shakaVersion = shakaVersion_major + "-" + shakaVersion_minor

shakaDebug = 'true'

configurations {
    proguard
}

task release {
    shakaDebug = 'false'
}

processResources {
    from('src/main/resources/properties') {
        include '**/*.properties'
        into 'properties'
        filter(ReplaceTokens, tokens: [shakaVersion: shakaVersion, shakaDebug: shakaDebug] )
    }
    from('src/main/resources/') {
        include '**/*.jar'
    }

    includeEmptyDirs = false

//    tasks.getByPath(":Shaka.Apktool:clean").execute()
    clean.execute()
}

dependencies {
    compile 'org.aspectj:aspectjrt:1.8.1'
    compile project(':brut.apktool:apktool-cli')
    compile project(':brut.apktool:apktool-lib')
    ajInpath project(':brut.apktool:apktool-lib')
    ajInpath project(':brut.apktool:apktool-cli')
    compile project(':brut.j.dir')
    testCompile 'junit:junit:4.11'
    testCompile 'com.google.code.gson:gson:2.2.4'
//    testCompile 'com.google.code.gson:gson:1.7.2'

//    proguard 'net.sf.proguard:proguard-base:4.8'
    proguard files('../libs/proguard.jar')
}

gradle.taskGraph.whenReady {
    fatJar {
        manifest {
//            attributes("Main-Class": "brut.apktool.Main")
            attributes("Main-Class": "com.rover12421.shaka.apktool.Main")
        }
    }
}

task proguard(type: JavaExec, dependsOn: fatJar) {
    def outFile = jar.destinationDir.getPath() + '/' + "ShakaApktool" + '_' + shakaVersion + '-release' + '.' + jar.extension
    inputs.file jar.archivePath
    outputs.file outFile

    classpath = configurations.proguard
    main = 'proguard.ProGuard'
    args '-injars ' + "${jar.archivePath}" + ' (!META-INF/LICENSE.txt,!META-INF/NOTICE.txt,!README)'
    args "-outjars ${outFile}"
    args "-libraryjars ${System.properties['java.home']}/lib/rt.jar"
//    args '-dontobfuscate'
//    args "-obfuscationdictionary ${keywordsFile}"
//    args "-classobfuscationdictionary ${keywordsFile}"
//    args "-packageobfuscationdictionary ${keywordsFile}"
    args '-dontoptimize'
    args '-dontnote **'
    args '-ignorewarnings'
    args '-dontwarn com.google.common.base.**'
    args '-dontwarn com.google.common.collect.**'
    args '-dontwarn com.google.common.util.**'
    args '-dontwarn javax.xml.xpath.**'
    args '-dontwarn com.rover12421.shaka.apktool.AspjectJ.**'
    args '-keep public class brut.apktool.Main { public static void main(java.lang.String[]); }'
    args '-keep class org.yaml.snakeyaml.** { public protected private *; }'
    args '-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }'
    args '-keep class brut.androlib.res.decoder.StringBlock { private *; }'
}

tasks.getByPath(':release').dependsOn(proguard)

task ShakaApktool(dependsOn: fatJar) {
}

