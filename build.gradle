/**
 *  Copyright 2015 Rover12421 <rover12421@163.com>
 *
 *  Licensed under the Apache License, Version 2.0 (the "License");
 *  you may not use this file except in compliance with the License.
 *  You may obtain a copy of the License at
 *
 *       http://www.apache.org/licenses/LICENSE-2.0
 *
 *  Unless required by applicable law or agreed to in writing, software
 *  distributed under the License is distributed on an "AS IS" BASIS,
 *  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 *  See the License for the specific language governing permissions and
 *  limitations under the License.
 */


ext.langLevel = '1.7'
ext.aspectjVersion = '1.8.4'
ext.shakaVersion = "2.0"

buildscript {
    repositories {
        jcenter()
        maven {
            url "https://maven.eveoh.nl/content/repositories/releases"
        }
    }
    tasks.withType(JavaCompile) {
        options.encoding = "UTF-8"
        options.incremental = true
    }
    dependencies {
        classpath 'eu.appsatori:gradle-fatjar-plugin:0.3'
        classpath 'nl.eveoh:gradle-aspectj:1.5'
    }
}

allprojects {
    apply plugin: 'java'
    apply plugin: 'idea'

    repositories {
        mavenCentral()
        jcenter()
    }

    sourceCompatibility = langLevel
    targetCompatibility = langLevel
}

subprojects {
    apply plugin: 'maven'
    apply plugin: 'aspectj'
    apply plugin: 'eu.appsatori.fatjar'

    ext {
        depends = [
                antlr           : 'org.antlr:antlr:3.5.2',
                antlr_runtime   : 'org.antlr:antlr-runtime:3.5.2',
                aspectj         : 'org.aspectj:aspectjrt:1.8.4',
                commons_cli     : 'commons-cli:commons-cli:1.2',
                commons_compress: 'org.apache.commons:commons-compress:1.4.1',
                commons_io      : 'commons-io:commons-io:2.4',
                commons_lang    : 'org.apache.commons:commons-lang3:3.1',
                dx              : 'com.google.android.tools:dx:1.7',
                findbugs        : 'com.google.code.findbugs:jsr305:1.3.9',
                gson            : 'com.google.code.gson:gson:2.2.4',
                guava           : 'com.google.guava:guava:18.0',
                jflex           : 'de.jflex:jflex:1.6.0',
                jflex_plugin    : 'co.tomlee.gradle.plugins:gradle-jflex-plugin:0.0.1',
                junit           : 'junit:junit:4.11',
                proguard        : 'net.sf.proguard:proguard-gradle:5.2.1',
                snakeyaml       : 'org.yaml:snakeyaml:1.12',
                stringtemplate  : 'org.antlr:stringtemplate:3.2.1',
                ST4             : 'org.antlr:ST4:4.0.7',
                xmlunit         : 'xmlunit:xmlunit:1.3',
                xmlpull         : 'xpp3:xpp3:1.1.4c',
        ]
    }
}

idea {
    project {
        languageLevel = langLevel
    }

    module {
        excludeDirs += files(
                'TestApk',
                'src/test/resources/temp'
        )
    }
}

task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

build.doFirst {
    def javaVersion = System.getProperty("java.version")

    //fail the build if we java 1.5 or 1.6.
    if (javaVersion.startsWith("1.5") || javaVersion.startsWith("1.6")) {
        throw new GradleException("You can fix this problem!\n" +
                "We found a " + javaVersion + " JDK\n" +
                "Please update JAVA_HOME to use at least a 1.7 JDK\n" +
                "Currently it is set to: " + System.getProperty("java.home")
        );
    }
}

// used for official releases only. Please don't use
task release {
}

//
//task deleteProperties(type: Delete) {
//    delete buildDir.getAbsolutePath() + '/resources/main'
//}
//
//processResources.dependsOn deleteProperties
//
//task copyProperties(type: Copy) {
//    from buildDir.getAbsolutePath() + '/resources/main'
//    into buildDir.getAbsolutePath() + '/classes/main'
//
//    include '**/*.properties'
//}
//compileJava.dependsOn copyProperties
//
//dependencies {
//
//    proguard 'net.sf.proguard:proguard-base:5.2'
////    proguard files('libs/proguard.jar')
//}
//
//gradle.taskGraph.whenReady {
//    fatJar {
//        manifest {
//            attributes("Main-Class": "com.rover12421.shaka.apktool.Main")
//        }
//    }
//}



//
///**
// * 使用AspjectJ之后,此处需要改为compileAspect
// * compileAspect在compileJava之前
// */
//compileAspect.dependsOn generateParserAntlrSource, generateTreeWalkerAntlrSource, generateJflexSource, generateTestAntlrSource
////compileTestAspect.dependsOn generateTestAntlrSource
//
//task proguard(type: JavaExec, dependsOn: fatJar) {
//    def outFile = jar.destinationDir.getPath() + '/' + "ShakaApktool" + '_' + shakaVersion + '-release' + '.' + jar.extension
//    inputs.file jar.archivePath
//    outputs.file outFile
//
//    classpath = configurations.proguard
//    main = 'proguard.ProGuard'
//    args '-injars ' + "${jar.archivePath}" + ' (!META-INF/LICENSE.txt,!META-INF/NOTICE.txt,!README)'
//    args "-outjars ${outFile}"
//    args "-libraryjars ${System.properties['java.home']}/lib/rt.jar"
////    args '-dontobfuscate'
////    args "-obfuscationdictionary ${keywordsFile}"
////    args "-classobfuscationdictionary ${keywordsFile}"
////    args "-packageobfuscationdictionary ${keywordsFile}"
//    args '-dontoptimize'
//    args '-dontnote **'
////    args '-ignorewarnings'
//    args '-dontwarn com.google.common.base.**'
//    args '-dontwarn com.google.common.collect.**'
//    args '-dontwarn com.google.common.util.**'
//    args '-dontwarn javax.xml.xpath.**'
//    args '-dontwarn com.rover12421.shaka.apktool.AspjectJ.**'
//    args '-dontwarn brut.androlib.**'
//    args '-keep public class com.rover12421.shaka.apktool.Main { public static void main(java.lang.String[]); }'
//    args '-keep class org.yaml.snakeyaml.** { public protected private *; }'
//    args '-keepclassmembers enum * { public static **[] values(); public static ** valueOf(java.lang.String); }'
////    args '-keep class brut.androlib.res.decoder.StringBlock { private *; }'
//    args '-keepclassmembernames class brut.apktool.Main { *** normalOptions; *** DecodeOptions; }'
//    args '-keepclassmembernames class brut.androlib.Androlib { *** mResUnknownFiles; }'
//    args '-keepclassmembernames class brut.androlib.res.data.value.ResBagValue { *** mParent; }'
//    args '-keepclassmembernames class brut.androlib.res.data.value.ResStyleValue { *** mItems; }'
//    args '-keepclassmembernames class brut.androlib.res.decoder.ResFileDecoder { *** mDecoders; }'
//    args '-keepclassmembernames class brut.androlib.res.decoder.AXmlResourceParser { *** mAttrDecoder; *** m_attributes; *** m_strings; *** android_ns; *** getAttributeOffset(...);}'
//    args '-keepclassmembernames class org.jf.dexlib2.dexbacked.DexBackedMethodImplementation { *** codeOffset; }'
//    args '-keepclassmembernames class brut.androlib.res.data.ResPackage { *** mResTable; }'
//}
//
//tasks.getByPath(':release').dependsOn(proguard)
//
//task cli() {
//    doLast {
//        file('build/libs/ShakaApktool.jar').renameTo(file("build/libs/ShakaApktool-" + shakaVersion + ".jar"))
//    }
//}
//cli.dependsOn fatJar
//
//
//test {
//    exclude 'com/rover12421/shaka/apktool/temp/**'
//
////    testLogging.showStandardStreams = true
//}